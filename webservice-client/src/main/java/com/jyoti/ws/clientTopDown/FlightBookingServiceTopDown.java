
package com.jyoti.ws.clientTopDown;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FlightBookingService_topDown", targetNamespace = "http://ws.bookingservice.jyoti.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FlightBookingServiceTopDown {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPrice", targetNamespace = "http://ws.bookingservice.jyoti.com/", className = "com.jyoti.ws.clientTopDown.GetPrice")
    @ResponseWrapper(localName = "getPriceResponse", targetNamespace = "http://ws.bookingservice.jyoti.com/", className = "com.jyoti.ws.clientTopDown.GetPriceResponse")
    @Action(input = "http://ws.bookingservice.jyoti.com/FlightBookingService_topDown/getPriceRequest", output = "http://ws.bookingservice.jyoti.com/FlightBookingService_topDown/getPriceResponse")
    public Double getPrice(
        @WebParam(name = "arg0", targetNamespace = "")
        Itinerary arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns com.jyoti.ws.clientTopDown.Ticket
     * @throws AuthenticationException_Exception
     * @throws TicketNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "issueTicket", targetNamespace = "http://ws.bookingservice.jyoti.com/", className = "com.jyoti.ws.clientTopDown.IssueTicket")
    @ResponseWrapper(localName = "issueTicketResponse", targetNamespace = "http://ws.bookingservice.jyoti.com/", className = "com.jyoti.ws.clientTopDown.IssueTicketResponse")
    @Action(input = "http://ws.bookingservice.jyoti.com/FlightBookingService_topDown/issueTicketRequest", output = "http://ws.bookingservice.jyoti.com/FlightBookingService_topDown/issueTicketResponse", fault = {
        @FaultAction(className = AuthenticationException_Exception.class, value = "http://ws.bookingservice.jyoti.com/FlightBookingService_topDown/issueTicket/Fault/AuthenticationException"),
        @FaultAction(className = TicketNotFoundException_Exception.class, value = "http://ws.bookingservice.jyoti.com/FlightBookingService_topDown/issueTicket/Fault/TicketNotFoundException")
    })
    public Ticket issueTicket(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws AuthenticationException_Exception, TicketNotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkAvailable", targetNamespace = "http://ws.bookingservice.jyoti.com/", className = "com.jyoti.ws.clientTopDown.CheckAvailable")
    @ResponseWrapper(localName = "checkAvailableResponse", targetNamespace = "http://ws.bookingservice.jyoti.com/", className = "com.jyoti.ws.clientTopDown.CheckAvailableResponse")
    @Action(input = "http://ws.bookingservice.jyoti.com/FlightBookingService_topDown/checkAvailableRequest", output = "http://ws.bookingservice.jyoti.com/FlightBookingService_topDown/checkAvailableResponse")
    public boolean checkAvailable(
        @WebParam(name = "arg0", targetNamespace = "")
        Itinerary arg0);

}
